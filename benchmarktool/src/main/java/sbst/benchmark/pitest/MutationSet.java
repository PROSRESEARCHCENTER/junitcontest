package sbst.benchmark.pitest;

import org.pitest.mutationtest.engine.Mutant;
import org.pitest.mutationtest.engine.MutationDetails;
import org.pitest.mutationtest.engine.MutationIdentifier;

import java.util.HashMap;
import java.util.Map;
import java.util.Set;

public class MutationSet {

    /**
     * Map to keep track of the details of the generated mutations
     **/
    private Map<MutationIdentifier, MutationDetails> generatedMutantDetails;

    /**
     * Map to keep track of the generated mutations
     **/
    private Map<MutationIdentifier, Mutant> generatedMutant;

    /**
     * Simple constructor to initialize the data structure
     */
    public MutationSet() {
        this.generatedMutantDetails = new HashMap<MutationIdentifier, MutationDetails>();
        this.generatedMutant = new HashMap<MutationIdentifier, Mutant>();
    }

    /**
     * Add a new mutation to the set
     *
     * @param id     of the mutation
     * @param mu     actual mutation to add
     * @param detail details of the mutation
     */
    public void addMutant(MutationIdentifier id, Mutant mu, MutationDetails detail) {
        this.generatedMutant.put(id, mu);
        this.generatedMutantDetails.put(id, detail);
    }

    /**
     * It returns the IDs of the mutations generated by PIT (the IDs are defined internally by PIT)
     *
     * @return Set of mutations ID
     */
    public Set<MutationIdentifier> getMutationIDs() {
        return this.generatedMutant.keySet();
    }

    /**
     * It retrieves the Mutation with the specified ID
     *
     * @param id of the mutation to retrieve
     * @return retrieved mutation
     */
    public Mutant getMutantion(MutationIdentifier id) {
        return this.generatedMutant.get(id);
    }

    /**
     * It retrieves the details of the Mutation with the specified ID
     *
     * @param id of the mutation to retrieve
     * @return details of the retrieved mutation
     */
    public MutationDetails getMutantionDetails(MutationIdentifier id) {
        return this.generatedMutantDetails.get(id);
    }

    public int getNumberOfMutations() {
        return this.generatedMutant.keySet().size();
    }

    public void remove(MutationIdentifier id) {
        this.generatedMutant.remove(id);
        this.generatedMutantDetails.remove(id);
    }
}
